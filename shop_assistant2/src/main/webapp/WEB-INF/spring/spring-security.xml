<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<!-- Spring-Security 的配置 -->
	<!-- 注意开启use-expressions.表示开启表达式. see:http://www.family168.com/tutorial/springsecurity3/html/el-access.html -->

	<security:global-method-security
		secured-annotations="enabled" pre-post-annotations="enabled" />
	<security:http pattern="/resources/**" security="none" />

	<security:http auto-config="true" use-expressions="true">

		<security:intercept-url pattern="/userAuthentication/login"
			access="permitAll" />

		<security:intercept-url pattern="/j_spring_security_check"
			access="permitAll" />

		<security:intercept-url pattern="/productmanager/**"
			access="hasRole('ROLE_ADMIN')" />

		<security:form-login login-page="/userAuthentication/login"

			authentication-failure-url="/userAuthentication/login?error=true"
			default-target-url="/productmanager" login-processing-url="/j_spring_security_check" />


		<!-- default-target-url="/productmanager" -->
		<!-- login-processing-url="/j_spring_security_check*" -->

		<security:logout invalidate-session="true"
			logout-success-url="/userAuthentication/login" />

	</security:http>



	<!-- 指定一个自定义的authentication-manager :customUserDetailsService -->
	<security:authentication-manager>
		<security:authentication-provider
			user-service-ref="customUserDetailsService">
			<!-- <security:password-encoder ref="passwordEncoder" /> -->
		</security:authentication-provider>
	</security:authentication-manager>



	<!-- 通过 customUserDetailsService,Spring会自动的用户的访问级别. 也可以理解成:以后我们和数据库操作就是通过customUserDetailsService来进行关联. -->
	<!-- <bean id="customUserDetailsService" class="com.user.service.CustomUserDetailsService" 
		/> -->

</beans>

